use("Restaurant")
db.restaurant.find();
//2
db.restaurant.find({}, {restaurant_id: 1, name: 1, borough:1, cuisine:1});
//3
db.restaurant.find({}, {restaurant_id: 1, name: 1, borough:1, cuisine:1, _id: 0});
// 4
db.restaurant.find({}, {restaurant_id: 1, name: 1, borough:1, zipcode:1, _id: 0});
// 5
db.restaurant.find({},{name:1 ,"borough":"Bronx"});
// 6
db.restaurant.find({},{name:1 ,"borough":"Bronx"}).limit(5);
// 7
db.restaurant.find({},{name:1 ,"borough":"Bronx"}).limit(5).skip(5);
// 8
db.restaurant.find({"grades": {$elemMatch: {"score": {$gt:90}}}});
// 9
db.restaurant.find({"grades": {$elemMatch: {"score": {$gt:80, $lt:100}}}});
// 10
db.restaurant.find({"address": {$elemMatch: {"coord": {$lt: -95.754168}}}});
// 11
db.restaurant.find({cuisine: {$ne: "American"}, "grades.score": {$gt: 70}, "address.coord": {$lt: -65.754168}})
// 12.-
db.restaurant.find({cuisine: {$ne: "American"}, "grades.score": {$gt: 70}, "address.coord": {$lt: -65.754168}})

// 13.-
db.restaurant.find({cuisine: {$ne: "American"}, "grades.grade": "A", borough: {$ne: "Brooklyn"}}).sort({cuisine: -1})

// 14.-
db.restaurant.find({name: /^Wil/}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0})

// 15.-
db.restaurant.find({name: /ces$/}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0})

// 16.-
db.restaurant.find({name: /.*Reg.*/}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0})

// 17.-
db.restaurant.find({borough: "Bronx", cuisine: {$in: ["American ", "Chinese"]}})

// 18.-
db.restaurant.find({borough: {$in: ["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0})

// 19.-
db.restaurant.find({borough: {$nin: ["Staten Island", "Queens", "Bronx", "Brooklyn"]}}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0})

// 20.-
db.restaurant.find({"grades.score": {$lte: 10}}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0})

// 21.-
db.restaurant.find({$or: [{cuisine: "Fish", name: {$ne: /^Wil/}, cuisine: {$nin: ["American ", "Chinese"]}}]}, {restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0})

// 22.-
db.restaurant.find({"grades.date": ISODate("2014-08-11T00:00:00Z"), "grades.grade": "A", "grades.score": 11}, {restaurant_id: 1, name: 1, grades: 1, _id: 0})

// 23.-
db.restaurant.find({"grades.1.date": ISODate("2014-08-11T00:00:00Z"), "grades.1.grade": "A", "grades.1.score": 9}, {restaurant_id: 1, name: 1, grades: 1, _id: 0})

// 24.-
db.restaurant.find({"address.coord.1": {$gt: 42, $lte: 52}}, {restaurant_id: 1, name: 1, address: 1, _id: 0})

// 25.-
db.restaurant.find().sort({name: 1})

// 26.-
db.restaurant.find().sort({name: -1})

// 27.-
db.restaurant.find().sort({cuisine: 1, borough: -1})

// 28.-
db.restaurant.find({"address.street": {$exists: false}})

// 29.-
db.restaurant.find({"address.coord": {$type: "double"}})

// 30.-
db.restaurant.find({"grades.score": {$mod: [7, 0]}}, {restaurant_id: 1, name: 1, grades: 1, _id: 0})

// 31.-
db.restaurant.find({name: /.*mon.*/}, {name: 1, borough: 1, "address.coord": 1, cuisine: 1, _id: 0})

// 32.-
db.restaurant.find({name: /^Mad/}, {name: 1, borough: 1, "address.coord": 1, cuisine: 1, _id: 0})





